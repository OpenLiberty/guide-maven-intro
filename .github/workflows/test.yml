name: Test Application

on:
  pull_request:
    branches: [master, qa]

jobs:
  get-files:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.set-files.outputs.files }}
      canSkip: ${{ steps.set-files.outputs.canSkip }}
    steps:
      - id: set-files
        run: |
          URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files"
          FILES=$(curl -s -X GET -G $URL| jq -r '[ .[] |  .filename ]' | tr -d '\n')
          echo "::set-output name=files::$FILES"
          if [ ${#FILES[@]} == 1 ] && [ ${FILES[0]} == README.adoc ]; then
             echo "Test can be skipped because only README.adoc was updated"
             echo "::set-output name=canSkip::true"
           else
             echo "Need to run test"           
             echo "::set-output name=canSkip::false"
          fi
  checker:
    runs-on: ubuntu-latest
    needs: [get-files]
    strategy:
      matrix:
        files: ${{ fromJSON(needs.get-files.outputs.files) }}
    steps:
      - name: Get tools
        uses: actions/checkout@v2
        with:
          path: tools/
          repository: openliberty/guides-common
      - name: Get files
        uses: actions/checkout@v2
        with:
          path: files/
          ref: pr-checker
      - name: Checking file
        run: |
          python3 ./tools/.github/workflows/pr-checker/checker.py --deny ./tools/.github/workflows/pr-checker/deny_list.json\
            --warn ./tools/.github/workflows/pr-checker/warning_list.json ./files/${{ matrix.files }}
  superlinter:
    runs-on: ubuntu-latest
    steps:
      - name: Get files
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get tools
        uses: actions/checkout@v2
        with:
          path: tools/
          repository: openliberty/guides-common
      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: ./tools/.github/workflows/pr-checker/linters/
  build:
    runs-on: ubuntu-latest
    needs: [get-files]
    if: "!contains(needs.get-files.outputs.canSkip, 'true')"
    strategy:
      matrix:
        jdk: [8]
    defaults:
      run:
        working-directory: finish
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}
      - run: unset _JAVA_OPTIONS
      - name: Run tests
        run: ../scripts/testApp.sh
      - name: Post tests
        if: always()
        run: |
          logsPath=$(find . -name "console.log");
          cat $logsPath | grep Launching
      - name: Archive server logs if failed
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: server-logs
          path: finish/target/liberty/wlp/usr/servers/guideServer/logs/
